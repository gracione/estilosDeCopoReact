{"ast":null,"code":"'use strict';\n\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\n\nvar React = _interopDefault(require('react'));\n\nvar reactDom = require('react-dom');\n\nvar invariant = _interopDefault(require('invariant'));\n\nvar warning = _interopDefault(require('warning'));\n\nfunction _defaults2(obj, defaults) {\n  var keys = Object.getOwnPropertyNames(defaults);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = Object.getOwnPropertyDescriptor(defaults, key);\n\n    if (value && value.configurable && obj[key] === undefined) {\n      Object.defineProperty(obj, key, value);\n    }\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _defaults2(subClass, superClass);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction setInputSelection(input, start, end) {\n  if ('selectionStart' in input && 'selectionEnd' in input) {\n    input.selectionStart = start;\n    input.selectionEnd = end;\n  } else {\n    var range = input.createTextRange();\n    range.collapse(true);\n    range.moveStart('character', start);\n    range.moveEnd('character', end - start);\n    range.select();\n  }\n}\n\nfunction getInputSelection(input) {\n  var start = 0;\n  var end = 0;\n\n  if ('selectionStart' in input && 'selectionEnd' in input) {\n    start = input.selectionStart;\n    end = input.selectionEnd;\n  } else {\n    var range = document.selection.createRange();\n\n    if (range.parentElement() === input) {\n      start = -range.moveStart('character', -input.value.length);\n      end = -range.moveEnd('character', -input.value.length);\n    }\n  }\n\n  return {\n    start: start,\n    end: end,\n    length: end - start\n  };\n}\n\nvar defaultFormatChars = {\n  '9': '[0-9]',\n  'a': '[A-Za-z]',\n  '*': '[A-Za-z0-9]'\n};\nvar defaultMaskChar = '_';\n\nfunction parseMask(mask, maskChar, formatChars) {\n  var parsedMaskString = '';\n  var prefix = '';\n  var lastEditablePosition = null;\n  var permanents = [];\n\n  if (maskChar === undefined) {\n    maskChar = defaultMaskChar;\n  }\n\n  if (formatChars == null) {\n    formatChars = defaultFormatChars;\n  }\n\n  if (!mask || typeof mask !== 'string') {\n    return {\n      maskChar: maskChar,\n      formatChars: formatChars,\n      mask: null,\n      prefix: null,\n      lastEditablePosition: null,\n      permanents: []\n    };\n  }\n\n  var isPermanent = false;\n  mask.split('').forEach(function (character) {\n    if (!isPermanent && character === '\\\\') {\n      isPermanent = true;\n    } else {\n      if (isPermanent || !formatChars[character]) {\n        permanents.push(parsedMaskString.length);\n\n        if (parsedMaskString.length === permanents.length - 1) {\n          prefix += character;\n        }\n      } else {\n        lastEditablePosition = parsedMaskString.length + 1;\n      }\n\n      parsedMaskString += character;\n      isPermanent = false;\n    }\n  });\n  return {\n    maskChar: maskChar,\n    formatChars: formatChars,\n    prefix: prefix,\n    mask: parsedMaskString,\n    lastEditablePosition: lastEditablePosition,\n    permanents: permanents\n  };\n}\n/* eslint no-use-before-define: [\"error\", { functions: false }] */\n\n\nfunction isPermanentCharacter(maskOptions, pos) {\n  return maskOptions.permanents.indexOf(pos) !== -1;\n}\n\nfunction isAllowedCharacter(maskOptions, pos, character) {\n  var mask = maskOptions.mask,\n      formatChars = maskOptions.formatChars;\n\n  if (!character) {\n    return false;\n  }\n\n  if (isPermanentCharacter(maskOptions, pos)) {\n    return mask[pos] === character;\n  }\n\n  var ruleChar = mask[pos];\n  var charRule = formatChars[ruleChar];\n  return new RegExp(charRule).test(character);\n}\n\nfunction isEmpty(maskOptions, value) {\n  return value.split('').every(function (character, i) {\n    return isPermanentCharacter(maskOptions, i) || !isAllowedCharacter(maskOptions, i, character);\n  });\n}\n\nfunction getFilledLength(maskOptions, value) {\n  var maskChar = maskOptions.maskChar,\n      prefix = maskOptions.prefix;\n\n  if (!maskChar) {\n    while (value.length > prefix.length && isPermanentCharacter(maskOptions, value.length - 1)) {\n      value = value.slice(0, value.length - 1);\n    }\n\n    return value.length;\n  }\n\n  var filledLength = prefix.length;\n\n  for (var i = value.length; i >= prefix.length; i--) {\n    var character = value[i];\n    var isEnteredCharacter = !isPermanentCharacter(maskOptions, i) && isAllowedCharacter(maskOptions, i, character);\n\n    if (isEnteredCharacter) {\n      filledLength = i + 1;\n      break;\n    }\n  }\n\n  return filledLength;\n}\n\nfunction isFilled(maskOptions, value) {\n  return getFilledLength(maskOptions, value) === maskOptions.mask.length;\n}\n\nfunction formatValue(maskOptions, value) {\n  var maskChar = maskOptions.maskChar,\n      mask = maskOptions.mask,\n      prefix = maskOptions.prefix;\n\n  if (!maskChar) {\n    value = insertString(maskOptions, '', value, 0);\n\n    if (value.length < prefix.length) {\n      value = prefix;\n    }\n\n    while (value.length < mask.length && isPermanentCharacter(maskOptions, value.length)) {\n      value += mask[value.length];\n    }\n\n    return value;\n  }\n\n  if (value) {\n    var emptyValue = formatValue(maskOptions, '');\n    return insertString(maskOptions, emptyValue, value, 0);\n  }\n\n  for (var i = 0; i < mask.length; i++) {\n    if (isPermanentCharacter(maskOptions, i)) {\n      value += mask[i];\n    } else {\n      value += maskChar;\n    }\n  }\n\n  return value;\n}\n\nfunction clearRange(maskOptions, value, start, len) {\n  var end = start + len;\n  var maskChar = maskOptions.maskChar,\n      mask = maskOptions.mask,\n      prefix = maskOptions.prefix;\n  var arrayValue = value.split('');\n\n  if (!maskChar) {\n    // remove any permanent chars after clear range, they will be added back by formatValue\n    for (var i = end; i < arrayValue.length; i++) {\n      if (isPermanentCharacter(maskOptions, i)) {\n        arrayValue[i] = '';\n      }\n    }\n\n    start = Math.max(prefix.length, start);\n    arrayValue.splice(start, end - start);\n    value = arrayValue.join('');\n    return formatValue(maskOptions, value);\n  }\n\n  return arrayValue.map(function (character, i) {\n    if (i < start || i >= end) {\n      return character;\n    }\n\n    if (isPermanentCharacter(maskOptions, i)) {\n      return mask[i];\n    }\n\n    return maskChar;\n  }).join('');\n}\n\nfunction insertString(maskOptions, value, insertStr, insertPosition) {\n  var mask = maskOptions.mask,\n      maskChar = maskOptions.maskChar,\n      prefix = maskOptions.prefix;\n  var arrayInsertStr = insertStr.split('');\n  var isInputFilled = isFilled(maskOptions, value);\n\n  var isUsablePosition = function isUsablePosition(pos, character) {\n    return !isPermanentCharacter(maskOptions, pos) || character === mask[pos];\n  };\n\n  var isUsableCharacter = function isUsableCharacter(character, pos) {\n    return !maskChar || !isPermanentCharacter(maskOptions, pos) || character !== maskChar;\n  };\n\n  if (!maskChar && insertPosition > value.length) {\n    value += mask.slice(value.length, insertPosition);\n  }\n\n  arrayInsertStr.every(function (insertCharacter) {\n    while (!isUsablePosition(insertPosition, insertCharacter)) {\n      if (insertPosition >= value.length) {\n        value += mask[insertPosition];\n      }\n\n      if (!isUsableCharacter(insertCharacter, insertPosition)) {\n        return true;\n      }\n\n      insertPosition++; // stop iteration if maximum value length reached\n\n      if (insertPosition >= mask.length) {\n        return false;\n      }\n    }\n\n    var isAllowed = isAllowedCharacter(maskOptions, insertPosition, insertCharacter) || insertCharacter === maskChar;\n\n    if (!isAllowed) {\n      return true;\n    }\n\n    if (insertPosition < value.length) {\n      if (maskChar || isInputFilled || insertPosition < prefix.length) {\n        value = value.slice(0, insertPosition) + insertCharacter + value.slice(insertPosition + 1);\n      } else {\n        value = value.slice(0, insertPosition) + insertCharacter + value.slice(insertPosition);\n        value = formatValue(maskOptions, value);\n      }\n    } else if (!maskChar) {\n      value += insertCharacter;\n    }\n\n    insertPosition++; // stop iteration if maximum value length reached\n\n    return insertPosition < mask.length;\n  });\n  return value;\n}\n\nfunction getInsertStringLength(maskOptions, value, insertStr, insertPosition) {\n  var mask = maskOptions.mask,\n      maskChar = maskOptions.maskChar;\n  var arrayInsertStr = insertStr.split('');\n  var initialInsertPosition = insertPosition;\n\n  var isUsablePosition = function isUsablePosition(pos, character) {\n    return !isPermanentCharacter(maskOptions, pos) || character === mask[pos];\n  };\n\n  arrayInsertStr.every(function (insertCharacter) {\n    while (!isUsablePosition(insertPosition, insertCharacter)) {\n      insertPosition++; // stop iteration if maximum value length reached\n\n      if (insertPosition >= mask.length) {\n        return false;\n      }\n    }\n\n    var isAllowed = isAllowedCharacter(maskOptions, insertPosition, insertCharacter) || insertCharacter === maskChar;\n\n    if (isAllowed) {\n      insertPosition++;\n    } // stop iteration if maximum value length reached\n\n\n    return insertPosition < mask.length;\n  });\n  return insertPosition - initialInsertPosition;\n}\n\nfunction getLeftEditablePosition(maskOptions, pos) {\n  for (var i = pos; i >= 0; --i) {\n    if (!isPermanentCharacter(maskOptions, i)) {\n      return i;\n    }\n  }\n\n  return null;\n}\n\nfunction getRightEditablePosition(maskOptions, pos) {\n  var mask = maskOptions.mask;\n\n  for (var i = pos; i < mask.length; ++i) {\n    if (!isPermanentCharacter(maskOptions, i)) {\n      return i;\n    }\n  }\n\n  return null;\n}\n\nfunction getStringValue(value) {\n  return !value && value !== 0 ? '' : value + '';\n}\n\nfunction processChange(maskOptions, value, selection, previousValue, previousSelection) {\n  var mask = maskOptions.mask,\n      prefix = maskOptions.prefix,\n      lastEditablePosition = maskOptions.lastEditablePosition;\n  var newValue = value;\n  var enteredString = '';\n  var formattedEnteredStringLength = 0;\n  var removedLength = 0;\n  var cursorPosition = Math.min(previousSelection.start, selection.start);\n\n  if (selection.end > previousSelection.start) {\n    enteredString = newValue.slice(previousSelection.start, selection.end);\n    formattedEnteredStringLength = getInsertStringLength(maskOptions, previousValue, enteredString, cursorPosition);\n\n    if (!formattedEnteredStringLength) {\n      removedLength = 0;\n    } else {\n      removedLength = previousSelection.length;\n    }\n  } else if (newValue.length < previousValue.length) {\n    removedLength = previousValue.length - newValue.length;\n  }\n\n  newValue = previousValue;\n\n  if (removedLength) {\n    if (removedLength === 1 && !previousSelection.length) {\n      var deleteFromRight = previousSelection.start === selection.start;\n      cursorPosition = deleteFromRight ? getRightEditablePosition(maskOptions, selection.start) : getLeftEditablePosition(maskOptions, selection.start);\n    }\n\n    newValue = clearRange(maskOptions, newValue, cursorPosition, removedLength);\n  }\n\n  newValue = insertString(maskOptions, newValue, enteredString, cursorPosition);\n  cursorPosition = cursorPosition + formattedEnteredStringLength;\n\n  if (cursorPosition >= mask.length) {\n    cursorPosition = mask.length;\n  } else if (cursorPosition < prefix.length && !formattedEnteredStringLength) {\n    cursorPosition = prefix.length;\n  } else if (cursorPosition >= prefix.length && cursorPosition < lastEditablePosition && formattedEnteredStringLength) {\n    cursorPosition = getRightEditablePosition(maskOptions, cursorPosition);\n  }\n\n  newValue = formatValue(maskOptions, newValue);\n\n  if (!enteredString) {\n    enteredString = null;\n  }\n\n  return {\n    value: newValue,\n    enteredString: enteredString,\n    selection: {\n      start: cursorPosition,\n      end: cursorPosition\n    }\n  };\n}\n\nfunction isWindowsPhoneBrowser() {\n  var windows = new RegExp('windows', 'i');\n  var phone = new RegExp('phone', 'i');\n  var ua = navigator.userAgent;\n  return windows.test(ua) && phone.test(ua);\n}\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n\nfunction getRequestAnimationFrame() {\n  return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame;\n}\n\nfunction getCancelAnimationFrame() {\n  return window.cancelAnimationFrame || window.webkitCancelRequestAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame;\n}\n\nfunction defer(fn) {\n  var hasCancelAnimationFrame = !!getCancelAnimationFrame();\n  var deferFn;\n\n  if (hasCancelAnimationFrame) {\n    deferFn = getRequestAnimationFrame();\n  } else {\n    deferFn = function deferFn() {\n      return setTimeout(fn, 1000 / 60);\n    };\n  }\n\n  return deferFn(fn);\n}\n\nfunction cancelDefer(deferId) {\n  var cancelFn = getCancelAnimationFrame() || clearTimeout;\n  cancelFn(deferId);\n}\n\nvar InputElement = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(InputElement, _React$Component);\n\n  function InputElement(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.focused = false;\n    _this.mounted = false;\n    _this.previousSelection = null;\n    _this.selectionDeferId = null;\n    _this.saveSelectionLoopDeferId = null;\n\n    _this.saveSelectionLoop = function () {\n      _this.previousSelection = _this.getSelection();\n      _this.saveSelectionLoopDeferId = defer(_this.saveSelectionLoop);\n    };\n\n    _this.runSaveSelectionLoop = function () {\n      if (_this.saveSelectionLoopDeferId === null) {\n        _this.saveSelectionLoop();\n      }\n    };\n\n    _this.stopSaveSelectionLoop = function () {\n      if (_this.saveSelectionLoopDeferId !== null) {\n        cancelDefer(_this.saveSelectionLoopDeferId);\n        _this.saveSelectionLoopDeferId = null;\n        _this.previousSelection = null;\n      }\n    };\n\n    _this.getInputDOMNode = function () {\n      if (!_this.mounted) {\n        return null;\n      }\n\n      var input = reactDom.findDOMNode(_assertThisInitialized(_assertThisInitialized(_this)));\n      var isDOMNode = typeof window !== 'undefined' && input instanceof window.Element; // workaround for react-test-renderer\n      // https://github.com/sanniassin/react-input-mask/issues/147\n\n      if (input && !isDOMNode) {\n        return null;\n      }\n\n      if (input.nodeName !== 'INPUT') {\n        input = input.querySelector('input');\n      }\n\n      if (!input) {\n        throw new Error('react-input-mask: inputComponent doesn\\'t contain input node');\n      }\n\n      return input;\n    };\n\n    _this.getInputValue = function () {\n      var input = _this.getInputDOMNode();\n\n      if (!input) {\n        return null;\n      }\n\n      return input.value;\n    };\n\n    _this.setInputValue = function (value) {\n      var input = _this.getInputDOMNode();\n\n      if (!input) {\n        return;\n      }\n\n      _this.value = value;\n      input.value = value;\n    };\n\n    _this.setCursorToEnd = function () {\n      var filledLength = getFilledLength(_this.maskOptions, _this.value);\n      var pos = getRightEditablePosition(_this.maskOptions, filledLength);\n\n      if (pos !== null) {\n        _this.setCursorPosition(pos);\n      }\n    };\n\n    _this.setSelection = function (start, end, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var input = _this.getInputDOMNode();\n\n      var isFocused = _this.isFocused(); // don't change selection on unfocused input\n      // because Safari sets focus on selection change (#154)\n\n\n      if (!input || !isFocused) {\n        return;\n      }\n\n      var _options = options,\n          deferred = _options.deferred;\n\n      if (!deferred) {\n        setInputSelection(input, start, end);\n      }\n\n      if (_this.selectionDeferId !== null) {\n        cancelDefer(_this.selectionDeferId);\n      } // deferred selection update is required for pre-Lollipop Android browser,\n      // but for consistent behavior we do it for all browsers\n\n\n      _this.selectionDeferId = defer(function () {\n        _this.selectionDeferId = null;\n        setInputSelection(input, start, end);\n      });\n      _this.previousSelection = {\n        start: start,\n        end: end,\n        length: Math.abs(end - start)\n      };\n    };\n\n    _this.getSelection = function () {\n      var input = _this.getInputDOMNode();\n\n      return getInputSelection(input);\n    };\n\n    _this.getCursorPosition = function () {\n      return _this.getSelection().start;\n    };\n\n    _this.setCursorPosition = function (pos) {\n      _this.setSelection(pos, pos);\n    };\n\n    _this.isFocused = function () {\n      return _this.focused;\n    };\n\n    _this.getBeforeMaskedValueChangeConfig = function () {\n      var _this$maskOptions = _this.maskOptions,\n          mask = _this$maskOptions.mask,\n          maskChar = _this$maskOptions.maskChar,\n          permanents = _this$maskOptions.permanents,\n          formatChars = _this$maskOptions.formatChars;\n      var alwaysShowMask = _this.props.alwaysShowMask;\n      return {\n        mask: mask,\n        maskChar: maskChar,\n        permanents: permanents,\n        alwaysShowMask: !!alwaysShowMask,\n        formatChars: formatChars\n      };\n    };\n\n    _this.isInputAutofilled = function (value, selection, previousValue, previousSelection) {\n      var input = _this.getInputDOMNode(); // only check for positive match because it will be false negative\n      // in case of autofill simulation in tests\n      //\n      // input.matches throws an exception if selector isn't supported\n\n\n      try {\n        if (input.matches(':-webkit-autofill')) {\n          return true;\n        }\n      } catch (e) {} // if input isn't focused then change event must have been triggered\n      // either by autofill or event simulation in tests\n\n\n      if (!_this.focused) {\n        return true;\n      } // if cursor has moved to the end while previousSelection forbids it\n      // then it must be autofill\n\n\n      return previousSelection.end < previousValue.length && selection.end === value.length;\n    };\n\n    _this.onChange = function (event) {\n      var _assertThisInitialize = _assertThisInitialized(_assertThisInitialized(_this)),\n          beforePasteState = _assertThisInitialize.beforePasteState;\n\n      var _assertThisInitialize2 = _assertThisInitialized(_assertThisInitialized(_this)),\n          previousSelection = _assertThisInitialize2.previousSelection;\n\n      var beforeMaskedValueChange = _this.props.beforeMaskedValueChange;\n\n      var value = _this.getInputValue();\n\n      var previousValue = _this.value;\n\n      var selection = _this.getSelection(); // autofill replaces entire value, ignore old one\n      // https://github.com/sanniassin/react-input-mask/issues/113\n\n\n      if (_this.isInputAutofilled(value, selection, previousValue, previousSelection)) {\n        previousValue = formatValue(_this.maskOptions, '');\n        previousSelection = {\n          start: 0,\n          end: 0,\n          length: 0\n        };\n      } // set value and selection as if we haven't\n      // cleared input in onPaste handler\n\n\n      if (beforePasteState) {\n        previousSelection = beforePasteState.selection;\n        previousValue = beforePasteState.value;\n        selection = {\n          start: previousSelection.start + value.length,\n          end: previousSelection.start + value.length,\n          length: 0\n        };\n        value = previousValue.slice(0, previousSelection.start) + value + previousValue.slice(previousSelection.end);\n        _this.beforePasteState = null;\n      }\n\n      var changedState = processChange(_this.maskOptions, value, selection, previousValue, previousSelection);\n      var enteredString = changedState.enteredString;\n      var newSelection = changedState.selection;\n      var newValue = changedState.value;\n\n      if (isFunction(beforeMaskedValueChange)) {\n        var modifiedValue = beforeMaskedValueChange({\n          value: newValue,\n          selection: newSelection\n        }, {\n          value: previousValue,\n          selection: previousSelection\n        }, enteredString, _this.getBeforeMaskedValueChangeConfig());\n        newValue = modifiedValue.value;\n        newSelection = modifiedValue.selection;\n      }\n\n      _this.setInputValue(newValue);\n\n      if (isFunction(_this.props.onChange)) {\n        _this.props.onChange(event);\n      }\n\n      if (_this.isWindowsPhoneBrowser) {\n        _this.setSelection(newSelection.start, newSelection.end, {\n          deferred: true\n        });\n      } else {\n        _this.setSelection(newSelection.start, newSelection.end);\n      }\n    };\n\n    _this.onFocus = function (event) {\n      var beforeMaskedValueChange = _this.props.beforeMaskedValueChange;\n      var _this$maskOptions2 = _this.maskOptions,\n          mask = _this$maskOptions2.mask,\n          prefix = _this$maskOptions2.prefix;\n      _this.focused = true; // if autoFocus is set, onFocus triggers before componentDidMount\n\n      _this.mounted = true;\n\n      if (mask) {\n        if (!_this.value) {\n          var emptyValue = formatValue(_this.maskOptions, prefix);\n          var newValue = formatValue(_this.maskOptions, emptyValue);\n          var filledLength = getFilledLength(_this.maskOptions, newValue);\n          var cursorPosition = getRightEditablePosition(_this.maskOptions, filledLength);\n          var newSelection = {\n            start: cursorPosition,\n            end: cursorPosition\n          };\n\n          if (isFunction(beforeMaskedValueChange)) {\n            var modifiedValue = beforeMaskedValueChange({\n              value: newValue,\n              selection: newSelection\n            }, {\n              value: _this.value,\n              selection: null\n            }, null, _this.getBeforeMaskedValueChangeConfig());\n            newValue = modifiedValue.value;\n            newSelection = modifiedValue.selection;\n          }\n\n          var isInputValueChanged = newValue !== _this.getInputValue();\n\n          if (isInputValueChanged) {\n            _this.setInputValue(newValue);\n          }\n\n          if (isInputValueChanged && isFunction(_this.props.onChange)) {\n            _this.props.onChange(event);\n          }\n\n          _this.setSelection(newSelection.start, newSelection.end);\n        } else if (getFilledLength(_this.maskOptions, _this.value) < _this.maskOptions.mask.length) {\n          _this.setCursorToEnd();\n        }\n\n        _this.runSaveSelectionLoop();\n      }\n\n      if (isFunction(_this.props.onFocus)) {\n        _this.props.onFocus(event);\n      }\n    };\n\n    _this.onBlur = function (event) {\n      var beforeMaskedValueChange = _this.props.beforeMaskedValueChange;\n      var mask = _this.maskOptions.mask;\n\n      _this.stopSaveSelectionLoop();\n\n      _this.focused = false;\n\n      if (mask && !_this.props.alwaysShowMask && isEmpty(_this.maskOptions, _this.value)) {\n        var newValue = '';\n\n        if (isFunction(beforeMaskedValueChange)) {\n          var modifiedValue = beforeMaskedValueChange({\n            value: newValue,\n            selection: null\n          }, {\n            value: _this.value,\n            selection: _this.previousSelection\n          }, null, _this.getBeforeMaskedValueChangeConfig());\n          newValue = modifiedValue.value;\n        }\n\n        var isInputValueChanged = newValue !== _this.getInputValue();\n\n        if (isInputValueChanged) {\n          _this.setInputValue(newValue);\n        }\n\n        if (isInputValueChanged && isFunction(_this.props.onChange)) {\n          _this.props.onChange(event);\n        }\n      }\n\n      if (isFunction(_this.props.onBlur)) {\n        _this.props.onBlur(event);\n      }\n    };\n\n    _this.onMouseDown = function (event) {\n      // tiny unintentional mouse movements can break cursor\n      // position on focus, so we have to restore it in that case\n      //\n      // https://github.com/sanniassin/react-input-mask/issues/108\n      if (!_this.focused && document.addEventListener) {\n        _this.mouseDownX = event.clientX;\n        _this.mouseDownY = event.clientY;\n        _this.mouseDownTime = new Date().getTime();\n\n        var mouseUpHandler = function mouseUpHandler(mouseUpEvent) {\n          document.removeEventListener('mouseup', mouseUpHandler);\n\n          if (!_this.focused) {\n            return;\n          }\n\n          var deltaX = Math.abs(mouseUpEvent.clientX - _this.mouseDownX);\n          var deltaY = Math.abs(mouseUpEvent.clientY - _this.mouseDownY);\n          var axisDelta = Math.max(deltaX, deltaY);\n\n          var timeDelta = new Date().getTime() - _this.mouseDownTime;\n\n          if (axisDelta <= 10 && timeDelta <= 200 || axisDelta <= 5 && timeDelta <= 300) {\n            _this.setCursorToEnd();\n          }\n        };\n\n        document.addEventListener('mouseup', mouseUpHandler);\n      }\n\n      if (isFunction(_this.props.onMouseDown)) {\n        _this.props.onMouseDown(event);\n      }\n    };\n\n    _this.onPaste = function (event) {\n      if (isFunction(_this.props.onPaste)) {\n        _this.props.onPaste(event);\n      } // event.clipboardData might not work in Android browser\n      // cleaning input to get raw text inside onChange handler\n\n\n      if (!event.defaultPrevented) {\n        _this.beforePasteState = {\n          value: _this.getInputValue(),\n          selection: _this.getSelection()\n        };\n\n        _this.setInputValue('');\n      }\n    };\n\n    _this.handleRef = function (ref) {\n      if (_this.props.children == null && isFunction(_this.props.inputRef)) {\n        _this.props.inputRef(ref);\n      }\n    };\n\n    var _mask = props.mask,\n        _maskChar = props.maskChar,\n        _formatChars = props.formatChars,\n        _alwaysShowMask = props.alwaysShowMask,\n        _beforeMaskedValueChange = props.beforeMaskedValueChange;\n    var defaultValue = props.defaultValue,\n        _value = props.value;\n    _this.maskOptions = parseMask(_mask, _maskChar, _formatChars);\n\n    if (defaultValue == null) {\n      defaultValue = '';\n    }\n\n    if (_value == null) {\n      _value = defaultValue;\n    }\n\n    var _newValue = getStringValue(_value);\n\n    if (_this.maskOptions.mask && (_alwaysShowMask || _newValue)) {\n      _newValue = formatValue(_this.maskOptions, _newValue);\n\n      if (isFunction(_beforeMaskedValueChange)) {\n        var oldValue = props.value;\n\n        if (props.value == null) {\n          oldValue = defaultValue;\n        }\n\n        oldValue = getStringValue(oldValue);\n\n        var modifiedValue = _beforeMaskedValueChange({\n          value: _newValue,\n          selection: null\n        }, {\n          value: oldValue,\n          selection: null\n        }, null, _this.getBeforeMaskedValueChangeConfig());\n\n        _newValue = modifiedValue.value;\n      }\n    }\n\n    _this.value = _newValue;\n    return _this;\n  }\n\n  var _proto = InputElement.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true; // workaround for react-test-renderer\n    // https://github.com/sanniassin/react-input-mask/issues/147\n\n    if (!this.getInputDOMNode()) {\n      return;\n    }\n\n    this.isWindowsPhoneBrowser = isWindowsPhoneBrowser();\n\n    if (this.maskOptions.mask && this.getInputValue() !== this.value) {\n      this.setInputValue(this.value);\n    }\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    var previousSelection = this.previousSelection;\n    var _this$props = this.props,\n        beforeMaskedValueChange = _this$props.beforeMaskedValueChange,\n        alwaysShowMask = _this$props.alwaysShowMask,\n        mask = _this$props.mask,\n        maskChar = _this$props.maskChar,\n        formatChars = _this$props.formatChars;\n    var previousMaskOptions = this.maskOptions;\n    var showEmpty = alwaysShowMask || this.isFocused();\n    var hasValue = this.props.value != null;\n    var newValue = hasValue ? getStringValue(this.props.value) : this.value;\n    var cursorPosition = previousSelection ? previousSelection.start : null;\n    this.maskOptions = parseMask(mask, maskChar, formatChars);\n\n    if (!this.maskOptions.mask) {\n      if (previousMaskOptions.mask) {\n        this.stopSaveSelectionLoop(); // render depends on this.maskOptions and this.value,\n        // call forceUpdate to keep it in sync\n\n        this.forceUpdate();\n      }\n\n      return;\n    } else if (!previousMaskOptions.mask && this.isFocused()) {\n      this.runSaveSelectionLoop();\n    }\n\n    var isMaskChanged = this.maskOptions.mask && this.maskOptions.mask !== previousMaskOptions.mask;\n\n    if (!previousMaskOptions.mask && !hasValue) {\n      newValue = this.getInputValue();\n    }\n\n    if (isMaskChanged || this.maskOptions.mask && (newValue || showEmpty)) {\n      newValue = formatValue(this.maskOptions, newValue);\n    }\n\n    if (isMaskChanged) {\n      var filledLength = getFilledLength(this.maskOptions, newValue);\n\n      if (cursorPosition === null || filledLength < cursorPosition) {\n        if (isFilled(this.maskOptions, newValue)) {\n          cursorPosition = filledLength;\n        } else {\n          cursorPosition = getRightEditablePosition(this.maskOptions, filledLength);\n        }\n      }\n    }\n\n    if (this.maskOptions.mask && isEmpty(this.maskOptions, newValue) && !showEmpty && (!hasValue || !this.props.value)) {\n      newValue = '';\n    }\n\n    var newSelection = {\n      start: cursorPosition,\n      end: cursorPosition\n    };\n\n    if (isFunction(beforeMaskedValueChange)) {\n      var modifiedValue = beforeMaskedValueChange({\n        value: newValue,\n        selection: newSelection\n      }, {\n        value: this.value,\n        selection: this.previousSelection\n      }, null, this.getBeforeMaskedValueChangeConfig());\n      newValue = modifiedValue.value;\n      newSelection = modifiedValue.selection;\n    }\n\n    this.value = newValue;\n    var isValueChanged = this.getInputValue() !== this.value; // render depends on this.maskOptions and this.value,\n    // call forceUpdate to keep it in sync\n\n    if (isValueChanged) {\n      this.setInputValue(this.value);\n      this.forceUpdate();\n    } else if (isMaskChanged) {\n      this.forceUpdate();\n    }\n\n    var isSelectionChanged = false;\n\n    if (newSelection.start != null && newSelection.end != null) {\n      isSelectionChanged = !previousSelection || previousSelection.start !== newSelection.start || previousSelection.end !== newSelection.end;\n    }\n\n    if (isSelectionChanged || isValueChanged) {\n      this.setSelection(newSelection.start, newSelection.end);\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n\n    if (this.selectionDeferId !== null) {\n      cancelDefer(this.selectionDeferId);\n    }\n\n    this.stopSaveSelectionLoop();\n  };\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        mask = _this$props2.mask,\n        alwaysShowMask = _this$props2.alwaysShowMask,\n        maskChar = _this$props2.maskChar,\n        formatChars = _this$props2.formatChars,\n        inputRef = _this$props2.inputRef,\n        beforeMaskedValueChange = _this$props2.beforeMaskedValueChange,\n        children = _this$props2.children,\n        restProps = _objectWithoutPropertiesLoose(_this$props2, [\"mask\", \"alwaysShowMask\", \"maskChar\", \"formatChars\", \"inputRef\", \"beforeMaskedValueChange\", \"children\"]);\n\n    var inputElement;\n    process.env.NODE_ENV !== \"production\" ? warning( // parse mask to test against actual mask prop as this.maskOptions\n    // will be updated later in componentDidUpdate\n    !restProps.maxLength || !parseMask(mask, maskChar, formatChars).mask, 'react-input-mask: maxLength property shouldn\\'t be passed to the masked input. It breaks masking and unnecessary because length is limited by the mask length.') : void 0;\n\n    if (children) {\n      !isFunction(children) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'react-input-mask: children must be a function') : invariant(false) : void 0;\n      var controlledProps = ['onChange', 'onPaste', 'onMouseDown', 'onFocus', 'onBlur', 'value', 'disabled', 'readOnly'];\n\n      var childrenProps = _extends({}, restProps);\n\n      controlledProps.forEach(function (propId) {\n        return delete childrenProps[propId];\n      });\n      inputElement = children(childrenProps);\n      var conflictProps = controlledProps.filter(function (propId) {\n        return inputElement.props[propId] != null && inputElement.props[propId] !== restProps[propId];\n      });\n      !!conflictProps.length ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"react-input-mask: the following props should be passed to the react-input-mask's component and should not be altered in children's function: \" + conflictProps.join(', ')) : invariant(false) : void 0;\n      process.env.NODE_ENV !== \"production\" ? warning(!inputRef, 'react-input-mask: inputRef is ignored when children is passed, attach ref to the children instead') : void 0;\n    } else {\n      inputElement = React.createElement(\"input\", _extends({\n        ref: this.handleRef\n      }, restProps));\n    }\n\n    var changedProps = {\n      onFocus: this.onFocus,\n      onBlur: this.onBlur\n    };\n\n    if (this.maskOptions.mask) {\n      if (!restProps.disabled && !restProps.readOnly) {\n        changedProps.onChange = this.onChange;\n        changedProps.onPaste = this.onPaste;\n        changedProps.onMouseDown = this.onMouseDown;\n      }\n\n      if (restProps.value != null) {\n        changedProps.value = this.value;\n      }\n    }\n\n    inputElement = React.cloneElement(inputElement, changedProps);\n    return inputElement;\n  };\n\n  return InputElement;\n}(React.Component);\n\nmodule.exports = InputElement;","map":{"version":3,"names":["_interopDefault","ex","React","require","reactDom","invariant","warning","_defaults2","obj","defaults","keys","Object","getOwnPropertyNames","i","length","key","value","getOwnPropertyDescriptor","configurable","undefined","defineProperty","_extends","assign","target","arguments","source","prototype","hasOwnProperty","call","apply","_inheritsLoose","subClass","superClass","create","constructor","_objectWithoutPropertiesLoose","excluded","sourceKeys","indexOf","_assertThisInitialized","self","ReferenceError","setInputSelection","input","start","end","selectionStart","selectionEnd","range","createTextRange","collapse","moveStart","moveEnd","select","getInputSelection","document","selection","createRange","parentElement","defaultFormatChars","defaultMaskChar","parseMask","mask","maskChar","formatChars","parsedMaskString","prefix","lastEditablePosition","permanents","isPermanent","split","forEach","character","push","isPermanentCharacter","maskOptions","pos","isAllowedCharacter","ruleChar","charRule","RegExp","test","isEmpty","every","getFilledLength","slice","filledLength","isEnteredCharacter","isFilled","formatValue","insertString","emptyValue","clearRange","len","arrayValue","Math","max","splice","join","map","insertStr","insertPosition","arrayInsertStr","isInputFilled","isUsablePosition","isUsableCharacter","insertCharacter","isAllowed","getInsertStringLength","initialInsertPosition","getLeftEditablePosition","getRightEditablePosition","getStringValue","processChange","previousValue","previousSelection","newValue","enteredString","formattedEnteredStringLength","removedLength","cursorPosition","min","deleteFromRight","isWindowsPhoneBrowser","windows","phone","ua","navigator","userAgent","isFunction","getRequestAnimationFrame","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","getCancelAnimationFrame","cancelAnimationFrame","webkitCancelRequestAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","defer","fn","hasCancelAnimationFrame","deferFn","setTimeout","cancelDefer","deferId","cancelFn","clearTimeout","InputElement","_React$Component","props","_this","focused","mounted","selectionDeferId","saveSelectionLoopDeferId","saveSelectionLoop","getSelection","runSaveSelectionLoop","stopSaveSelectionLoop","getInputDOMNode","findDOMNode","isDOMNode","Element","nodeName","querySelector","Error","getInputValue","setInputValue","setCursorToEnd","setCursorPosition","setSelection","options","isFocused","_options","deferred","abs","getCursorPosition","getBeforeMaskedValueChangeConfig","_this$maskOptions","alwaysShowMask","isInputAutofilled","matches","e","onChange","event","_assertThisInitialize","beforePasteState","_assertThisInitialize2","beforeMaskedValueChange","changedState","newSelection","modifiedValue","onFocus","_this$maskOptions2","isInputValueChanged","onBlur","onMouseDown","addEventListener","mouseDownX","clientX","mouseDownY","clientY","mouseDownTime","Date","getTime","mouseUpHandler","mouseUpEvent","removeEventListener","deltaX","deltaY","axisDelta","timeDelta","onPaste","defaultPrevented","handleRef","ref","children","inputRef","_mask","_maskChar","_formatChars","_alwaysShowMask","_beforeMaskedValueChange","defaultValue","_value","_newValue","oldValue","_proto","componentDidMount","componentDidUpdate","_this$props","previousMaskOptions","showEmpty","hasValue","forceUpdate","isMaskChanged","isValueChanged","isSelectionChanged","componentWillUnmount","render","_this$props2","restProps","inputElement","process","env","NODE_ENV","maxLength","controlledProps","childrenProps","propId","conflictProps","filter","createElement","changedProps","disabled","readOnly","cloneElement","Component","module","exports"],"sources":["/var/www/html/React/components-example/node_modules/react-input-mask/lib/react-input-mask.development.js"],"sourcesContent":["'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar React = _interopDefault(require('react'));\nvar reactDom = require('react-dom');\nvar invariant = _interopDefault(require('invariant'));\nvar warning = _interopDefault(require('warning'));\n\nfunction _defaults2(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _defaults2(subClass, superClass);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction setInputSelection(input, start, end) {\n  if ('selectionStart' in input && 'selectionEnd' in input) {\n    input.selectionStart = start;\n    input.selectionEnd = end;\n  } else {\n    var range = input.createTextRange();\n    range.collapse(true);\n    range.moveStart('character', start);\n    range.moveEnd('character', end - start);\n    range.select();\n  }\n}\nfunction getInputSelection(input) {\n  var start = 0;\n  var end = 0;\n\n  if ('selectionStart' in input && 'selectionEnd' in input) {\n    start = input.selectionStart;\n    end = input.selectionEnd;\n  } else {\n    var range = document.selection.createRange();\n\n    if (range.parentElement() === input) {\n      start = -range.moveStart('character', -input.value.length);\n      end = -range.moveEnd('character', -input.value.length);\n    }\n  }\n\n  return {\n    start: start,\n    end: end,\n    length: end - start\n  };\n}\n\nvar defaultFormatChars = {\n  '9': '[0-9]',\n  'a': '[A-Za-z]',\n  '*': '[A-Za-z0-9]'\n};\nvar defaultMaskChar = '_';\n\nfunction parseMask (mask, maskChar, formatChars) {\n  var parsedMaskString = '';\n  var prefix = '';\n  var lastEditablePosition = null;\n  var permanents = [];\n\n  if (maskChar === undefined) {\n    maskChar = defaultMaskChar;\n  }\n\n  if (formatChars == null) {\n    formatChars = defaultFormatChars;\n  }\n\n  if (!mask || typeof mask !== 'string') {\n    return {\n      maskChar: maskChar,\n      formatChars: formatChars,\n      mask: null,\n      prefix: null,\n      lastEditablePosition: null,\n      permanents: []\n    };\n  }\n\n  var isPermanent = false;\n  mask.split('').forEach(function (character) {\n    if (!isPermanent && character === '\\\\') {\n      isPermanent = true;\n    } else {\n      if (isPermanent || !formatChars[character]) {\n        permanents.push(parsedMaskString.length);\n\n        if (parsedMaskString.length === permanents.length - 1) {\n          prefix += character;\n        }\n      } else {\n        lastEditablePosition = parsedMaskString.length + 1;\n      }\n\n      parsedMaskString += character;\n      isPermanent = false;\n    }\n  });\n  return {\n    maskChar: maskChar,\n    formatChars: formatChars,\n    prefix: prefix,\n    mask: parsedMaskString,\n    lastEditablePosition: lastEditablePosition,\n    permanents: permanents\n  };\n}\n\n/* eslint no-use-before-define: [\"error\", { functions: false }] */\nfunction isPermanentCharacter(maskOptions, pos) {\n  return maskOptions.permanents.indexOf(pos) !== -1;\n}\nfunction isAllowedCharacter(maskOptions, pos, character) {\n  var mask = maskOptions.mask,\n      formatChars = maskOptions.formatChars;\n\n  if (!character) {\n    return false;\n  }\n\n  if (isPermanentCharacter(maskOptions, pos)) {\n    return mask[pos] === character;\n  }\n\n  var ruleChar = mask[pos];\n  var charRule = formatChars[ruleChar];\n  return new RegExp(charRule).test(character);\n}\nfunction isEmpty(maskOptions, value) {\n  return value.split('').every(function (character, i) {\n    return isPermanentCharacter(maskOptions, i) || !isAllowedCharacter(maskOptions, i, character);\n  });\n}\nfunction getFilledLength(maskOptions, value) {\n  var maskChar = maskOptions.maskChar,\n      prefix = maskOptions.prefix;\n\n  if (!maskChar) {\n    while (value.length > prefix.length && isPermanentCharacter(maskOptions, value.length - 1)) {\n      value = value.slice(0, value.length - 1);\n    }\n\n    return value.length;\n  }\n\n  var filledLength = prefix.length;\n\n  for (var i = value.length; i >= prefix.length; i--) {\n    var character = value[i];\n    var isEnteredCharacter = !isPermanentCharacter(maskOptions, i) && isAllowedCharacter(maskOptions, i, character);\n\n    if (isEnteredCharacter) {\n      filledLength = i + 1;\n      break;\n    }\n  }\n\n  return filledLength;\n}\nfunction isFilled(maskOptions, value) {\n  return getFilledLength(maskOptions, value) === maskOptions.mask.length;\n}\nfunction formatValue(maskOptions, value) {\n  var maskChar = maskOptions.maskChar,\n      mask = maskOptions.mask,\n      prefix = maskOptions.prefix;\n\n  if (!maskChar) {\n    value = insertString(maskOptions, '', value, 0);\n\n    if (value.length < prefix.length) {\n      value = prefix;\n    }\n\n    while (value.length < mask.length && isPermanentCharacter(maskOptions, value.length)) {\n      value += mask[value.length];\n    }\n\n    return value;\n  }\n\n  if (value) {\n    var emptyValue = formatValue(maskOptions, '');\n    return insertString(maskOptions, emptyValue, value, 0);\n  }\n\n  for (var i = 0; i < mask.length; i++) {\n    if (isPermanentCharacter(maskOptions, i)) {\n      value += mask[i];\n    } else {\n      value += maskChar;\n    }\n  }\n\n  return value;\n}\nfunction clearRange(maskOptions, value, start, len) {\n  var end = start + len;\n  var maskChar = maskOptions.maskChar,\n      mask = maskOptions.mask,\n      prefix = maskOptions.prefix;\n  var arrayValue = value.split('');\n\n  if (!maskChar) {\n    // remove any permanent chars after clear range, they will be added back by formatValue\n    for (var i = end; i < arrayValue.length; i++) {\n      if (isPermanentCharacter(maskOptions, i)) {\n        arrayValue[i] = '';\n      }\n    }\n\n    start = Math.max(prefix.length, start);\n    arrayValue.splice(start, end - start);\n    value = arrayValue.join('');\n    return formatValue(maskOptions, value);\n  }\n\n  return arrayValue.map(function (character, i) {\n    if (i < start || i >= end) {\n      return character;\n    }\n\n    if (isPermanentCharacter(maskOptions, i)) {\n      return mask[i];\n    }\n\n    return maskChar;\n  }).join('');\n}\nfunction insertString(maskOptions, value, insertStr, insertPosition) {\n  var mask = maskOptions.mask,\n      maskChar = maskOptions.maskChar,\n      prefix = maskOptions.prefix;\n  var arrayInsertStr = insertStr.split('');\n  var isInputFilled = isFilled(maskOptions, value);\n\n  var isUsablePosition = function isUsablePosition(pos, character) {\n    return !isPermanentCharacter(maskOptions, pos) || character === mask[pos];\n  };\n\n  var isUsableCharacter = function isUsableCharacter(character, pos) {\n    return !maskChar || !isPermanentCharacter(maskOptions, pos) || character !== maskChar;\n  };\n\n  if (!maskChar && insertPosition > value.length) {\n    value += mask.slice(value.length, insertPosition);\n  }\n\n  arrayInsertStr.every(function (insertCharacter) {\n    while (!isUsablePosition(insertPosition, insertCharacter)) {\n      if (insertPosition >= value.length) {\n        value += mask[insertPosition];\n      }\n\n      if (!isUsableCharacter(insertCharacter, insertPosition)) {\n        return true;\n      }\n\n      insertPosition++; // stop iteration if maximum value length reached\n\n      if (insertPosition >= mask.length) {\n        return false;\n      }\n    }\n\n    var isAllowed = isAllowedCharacter(maskOptions, insertPosition, insertCharacter) || insertCharacter === maskChar;\n\n    if (!isAllowed) {\n      return true;\n    }\n\n    if (insertPosition < value.length) {\n      if (maskChar || isInputFilled || insertPosition < prefix.length) {\n        value = value.slice(0, insertPosition) + insertCharacter + value.slice(insertPosition + 1);\n      } else {\n        value = value.slice(0, insertPosition) + insertCharacter + value.slice(insertPosition);\n        value = formatValue(maskOptions, value);\n      }\n    } else if (!maskChar) {\n      value += insertCharacter;\n    }\n\n    insertPosition++; // stop iteration if maximum value length reached\n\n    return insertPosition < mask.length;\n  });\n  return value;\n}\nfunction getInsertStringLength(maskOptions, value, insertStr, insertPosition) {\n  var mask = maskOptions.mask,\n      maskChar = maskOptions.maskChar;\n  var arrayInsertStr = insertStr.split('');\n  var initialInsertPosition = insertPosition;\n\n  var isUsablePosition = function isUsablePosition(pos, character) {\n    return !isPermanentCharacter(maskOptions, pos) || character === mask[pos];\n  };\n\n  arrayInsertStr.every(function (insertCharacter) {\n    while (!isUsablePosition(insertPosition, insertCharacter)) {\n      insertPosition++; // stop iteration if maximum value length reached\n\n      if (insertPosition >= mask.length) {\n        return false;\n      }\n    }\n\n    var isAllowed = isAllowedCharacter(maskOptions, insertPosition, insertCharacter) || insertCharacter === maskChar;\n\n    if (isAllowed) {\n      insertPosition++;\n    } // stop iteration if maximum value length reached\n\n\n    return insertPosition < mask.length;\n  });\n  return insertPosition - initialInsertPosition;\n}\nfunction getLeftEditablePosition(maskOptions, pos) {\n  for (var i = pos; i >= 0; --i) {\n    if (!isPermanentCharacter(maskOptions, i)) {\n      return i;\n    }\n  }\n\n  return null;\n}\nfunction getRightEditablePosition(maskOptions, pos) {\n  var mask = maskOptions.mask;\n\n  for (var i = pos; i < mask.length; ++i) {\n    if (!isPermanentCharacter(maskOptions, i)) {\n      return i;\n    }\n  }\n\n  return null;\n}\nfunction getStringValue(value) {\n  return !value && value !== 0 ? '' : value + '';\n}\n\nfunction processChange(maskOptions, value, selection, previousValue, previousSelection) {\n  var mask = maskOptions.mask,\n      prefix = maskOptions.prefix,\n      lastEditablePosition = maskOptions.lastEditablePosition;\n  var newValue = value;\n  var enteredString = '';\n  var formattedEnteredStringLength = 0;\n  var removedLength = 0;\n  var cursorPosition = Math.min(previousSelection.start, selection.start);\n\n  if (selection.end > previousSelection.start) {\n    enteredString = newValue.slice(previousSelection.start, selection.end);\n    formattedEnteredStringLength = getInsertStringLength(maskOptions, previousValue, enteredString, cursorPosition);\n\n    if (!formattedEnteredStringLength) {\n      removedLength = 0;\n    } else {\n      removedLength = previousSelection.length;\n    }\n  } else if (newValue.length < previousValue.length) {\n    removedLength = previousValue.length - newValue.length;\n  }\n\n  newValue = previousValue;\n\n  if (removedLength) {\n    if (removedLength === 1 && !previousSelection.length) {\n      var deleteFromRight = previousSelection.start === selection.start;\n      cursorPosition = deleteFromRight ? getRightEditablePosition(maskOptions, selection.start) : getLeftEditablePosition(maskOptions, selection.start);\n    }\n\n    newValue = clearRange(maskOptions, newValue, cursorPosition, removedLength);\n  }\n\n  newValue = insertString(maskOptions, newValue, enteredString, cursorPosition);\n  cursorPosition = cursorPosition + formattedEnteredStringLength;\n\n  if (cursorPosition >= mask.length) {\n    cursorPosition = mask.length;\n  } else if (cursorPosition < prefix.length && !formattedEnteredStringLength) {\n    cursorPosition = prefix.length;\n  } else if (cursorPosition >= prefix.length && cursorPosition < lastEditablePosition && formattedEnteredStringLength) {\n    cursorPosition = getRightEditablePosition(maskOptions, cursorPosition);\n  }\n\n  newValue = formatValue(maskOptions, newValue);\n\n  if (!enteredString) {\n    enteredString = null;\n  }\n\n  return {\n    value: newValue,\n    enteredString: enteredString,\n    selection: {\n      start: cursorPosition,\n      end: cursorPosition\n    }\n  };\n}\n\nfunction isWindowsPhoneBrowser() {\n  var windows = new RegExp('windows', 'i');\n  var phone = new RegExp('phone', 'i');\n  var ua = navigator.userAgent;\n  return windows.test(ua) && phone.test(ua);\n}\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n\nfunction getRequestAnimationFrame() {\n  return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame;\n}\n\nfunction getCancelAnimationFrame() {\n  return window.cancelAnimationFrame || window.webkitCancelRequestAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame;\n}\n\nfunction defer(fn) {\n  var hasCancelAnimationFrame = !!getCancelAnimationFrame();\n  var deferFn;\n\n  if (hasCancelAnimationFrame) {\n    deferFn = getRequestAnimationFrame();\n  } else {\n    deferFn = function deferFn() {\n      return setTimeout(fn, 1000 / 60);\n    };\n  }\n\n  return deferFn(fn);\n}\nfunction cancelDefer(deferId) {\n  var cancelFn = getCancelAnimationFrame() || clearTimeout;\n  cancelFn(deferId);\n}\n\nvar InputElement =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(InputElement, _React$Component);\n\n  function InputElement(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.focused = false;\n    _this.mounted = false;\n    _this.previousSelection = null;\n    _this.selectionDeferId = null;\n    _this.saveSelectionLoopDeferId = null;\n\n    _this.saveSelectionLoop = function () {\n      _this.previousSelection = _this.getSelection();\n      _this.saveSelectionLoopDeferId = defer(_this.saveSelectionLoop);\n    };\n\n    _this.runSaveSelectionLoop = function () {\n      if (_this.saveSelectionLoopDeferId === null) {\n        _this.saveSelectionLoop();\n      }\n    };\n\n    _this.stopSaveSelectionLoop = function () {\n      if (_this.saveSelectionLoopDeferId !== null) {\n        cancelDefer(_this.saveSelectionLoopDeferId);\n        _this.saveSelectionLoopDeferId = null;\n        _this.previousSelection = null;\n      }\n    };\n\n    _this.getInputDOMNode = function () {\n      if (!_this.mounted) {\n        return null;\n      }\n\n      var input = reactDom.findDOMNode(_assertThisInitialized(_assertThisInitialized(_this)));\n      var isDOMNode = typeof window !== 'undefined' && input instanceof window.Element; // workaround for react-test-renderer\n      // https://github.com/sanniassin/react-input-mask/issues/147\n\n      if (input && !isDOMNode) {\n        return null;\n      }\n\n      if (input.nodeName !== 'INPUT') {\n        input = input.querySelector('input');\n      }\n\n      if (!input) {\n        throw new Error('react-input-mask: inputComponent doesn\\'t contain input node');\n      }\n\n      return input;\n    };\n\n    _this.getInputValue = function () {\n      var input = _this.getInputDOMNode();\n\n      if (!input) {\n        return null;\n      }\n\n      return input.value;\n    };\n\n    _this.setInputValue = function (value) {\n      var input = _this.getInputDOMNode();\n\n      if (!input) {\n        return;\n      }\n\n      _this.value = value;\n      input.value = value;\n    };\n\n    _this.setCursorToEnd = function () {\n      var filledLength = getFilledLength(_this.maskOptions, _this.value);\n      var pos = getRightEditablePosition(_this.maskOptions, filledLength);\n\n      if (pos !== null) {\n        _this.setCursorPosition(pos);\n      }\n    };\n\n    _this.setSelection = function (start, end, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var input = _this.getInputDOMNode();\n\n      var isFocused = _this.isFocused(); // don't change selection on unfocused input\n      // because Safari sets focus on selection change (#154)\n\n\n      if (!input || !isFocused) {\n        return;\n      }\n\n      var _options = options,\n          deferred = _options.deferred;\n\n      if (!deferred) {\n        setInputSelection(input, start, end);\n      }\n\n      if (_this.selectionDeferId !== null) {\n        cancelDefer(_this.selectionDeferId);\n      } // deferred selection update is required for pre-Lollipop Android browser,\n      // but for consistent behavior we do it for all browsers\n\n\n      _this.selectionDeferId = defer(function () {\n        _this.selectionDeferId = null;\n        setInputSelection(input, start, end);\n      });\n      _this.previousSelection = {\n        start: start,\n        end: end,\n        length: Math.abs(end - start)\n      };\n    };\n\n    _this.getSelection = function () {\n      var input = _this.getInputDOMNode();\n\n      return getInputSelection(input);\n    };\n\n    _this.getCursorPosition = function () {\n      return _this.getSelection().start;\n    };\n\n    _this.setCursorPosition = function (pos) {\n      _this.setSelection(pos, pos);\n    };\n\n    _this.isFocused = function () {\n      return _this.focused;\n    };\n\n    _this.getBeforeMaskedValueChangeConfig = function () {\n      var _this$maskOptions = _this.maskOptions,\n          mask = _this$maskOptions.mask,\n          maskChar = _this$maskOptions.maskChar,\n          permanents = _this$maskOptions.permanents,\n          formatChars = _this$maskOptions.formatChars;\n      var alwaysShowMask = _this.props.alwaysShowMask;\n      return {\n        mask: mask,\n        maskChar: maskChar,\n        permanents: permanents,\n        alwaysShowMask: !!alwaysShowMask,\n        formatChars: formatChars\n      };\n    };\n\n    _this.isInputAutofilled = function (value, selection, previousValue, previousSelection) {\n      var input = _this.getInputDOMNode(); // only check for positive match because it will be false negative\n      // in case of autofill simulation in tests\n      //\n      // input.matches throws an exception if selector isn't supported\n\n\n      try {\n        if (input.matches(':-webkit-autofill')) {\n          return true;\n        }\n      } catch (e) {} // if input isn't focused then change event must have been triggered\n      // either by autofill or event simulation in tests\n\n\n      if (!_this.focused) {\n        return true;\n      } // if cursor has moved to the end while previousSelection forbids it\n      // then it must be autofill\n\n\n      return previousSelection.end < previousValue.length && selection.end === value.length;\n    };\n\n    _this.onChange = function (event) {\n      var _assertThisInitialize = _assertThisInitialized(_assertThisInitialized(_this)),\n          beforePasteState = _assertThisInitialize.beforePasteState;\n\n      var _assertThisInitialize2 = _assertThisInitialized(_assertThisInitialized(_this)),\n          previousSelection = _assertThisInitialize2.previousSelection;\n\n      var beforeMaskedValueChange = _this.props.beforeMaskedValueChange;\n\n      var value = _this.getInputValue();\n\n      var previousValue = _this.value;\n\n      var selection = _this.getSelection(); // autofill replaces entire value, ignore old one\n      // https://github.com/sanniassin/react-input-mask/issues/113\n\n\n      if (_this.isInputAutofilled(value, selection, previousValue, previousSelection)) {\n        previousValue = formatValue(_this.maskOptions, '');\n        previousSelection = {\n          start: 0,\n          end: 0,\n          length: 0\n        };\n      } // set value and selection as if we haven't\n      // cleared input in onPaste handler\n\n\n      if (beforePasteState) {\n        previousSelection = beforePasteState.selection;\n        previousValue = beforePasteState.value;\n        selection = {\n          start: previousSelection.start + value.length,\n          end: previousSelection.start + value.length,\n          length: 0\n        };\n        value = previousValue.slice(0, previousSelection.start) + value + previousValue.slice(previousSelection.end);\n        _this.beforePasteState = null;\n      }\n\n      var changedState = processChange(_this.maskOptions, value, selection, previousValue, previousSelection);\n      var enteredString = changedState.enteredString;\n      var newSelection = changedState.selection;\n      var newValue = changedState.value;\n\n      if (isFunction(beforeMaskedValueChange)) {\n        var modifiedValue = beforeMaskedValueChange({\n          value: newValue,\n          selection: newSelection\n        }, {\n          value: previousValue,\n          selection: previousSelection\n        }, enteredString, _this.getBeforeMaskedValueChangeConfig());\n        newValue = modifiedValue.value;\n        newSelection = modifiedValue.selection;\n      }\n\n      _this.setInputValue(newValue);\n\n      if (isFunction(_this.props.onChange)) {\n        _this.props.onChange(event);\n      }\n\n      if (_this.isWindowsPhoneBrowser) {\n        _this.setSelection(newSelection.start, newSelection.end, {\n          deferred: true\n        });\n      } else {\n        _this.setSelection(newSelection.start, newSelection.end);\n      }\n    };\n\n    _this.onFocus = function (event) {\n      var beforeMaskedValueChange = _this.props.beforeMaskedValueChange;\n      var _this$maskOptions2 = _this.maskOptions,\n          mask = _this$maskOptions2.mask,\n          prefix = _this$maskOptions2.prefix;\n      _this.focused = true; // if autoFocus is set, onFocus triggers before componentDidMount\n\n      _this.mounted = true;\n\n      if (mask) {\n        if (!_this.value) {\n          var emptyValue = formatValue(_this.maskOptions, prefix);\n          var newValue = formatValue(_this.maskOptions, emptyValue);\n          var filledLength = getFilledLength(_this.maskOptions, newValue);\n          var cursorPosition = getRightEditablePosition(_this.maskOptions, filledLength);\n          var newSelection = {\n            start: cursorPosition,\n            end: cursorPosition\n          };\n\n          if (isFunction(beforeMaskedValueChange)) {\n            var modifiedValue = beforeMaskedValueChange({\n              value: newValue,\n              selection: newSelection\n            }, {\n              value: _this.value,\n              selection: null\n            }, null, _this.getBeforeMaskedValueChangeConfig());\n            newValue = modifiedValue.value;\n            newSelection = modifiedValue.selection;\n          }\n\n          var isInputValueChanged = newValue !== _this.getInputValue();\n\n          if (isInputValueChanged) {\n            _this.setInputValue(newValue);\n          }\n\n          if (isInputValueChanged && isFunction(_this.props.onChange)) {\n            _this.props.onChange(event);\n          }\n\n          _this.setSelection(newSelection.start, newSelection.end);\n        } else if (getFilledLength(_this.maskOptions, _this.value) < _this.maskOptions.mask.length) {\n          _this.setCursorToEnd();\n        }\n\n        _this.runSaveSelectionLoop();\n      }\n\n      if (isFunction(_this.props.onFocus)) {\n        _this.props.onFocus(event);\n      }\n    };\n\n    _this.onBlur = function (event) {\n      var beforeMaskedValueChange = _this.props.beforeMaskedValueChange;\n      var mask = _this.maskOptions.mask;\n\n      _this.stopSaveSelectionLoop();\n\n      _this.focused = false;\n\n      if (mask && !_this.props.alwaysShowMask && isEmpty(_this.maskOptions, _this.value)) {\n        var newValue = '';\n\n        if (isFunction(beforeMaskedValueChange)) {\n          var modifiedValue = beforeMaskedValueChange({\n            value: newValue,\n            selection: null\n          }, {\n            value: _this.value,\n            selection: _this.previousSelection\n          }, null, _this.getBeforeMaskedValueChangeConfig());\n          newValue = modifiedValue.value;\n        }\n\n        var isInputValueChanged = newValue !== _this.getInputValue();\n\n        if (isInputValueChanged) {\n          _this.setInputValue(newValue);\n        }\n\n        if (isInputValueChanged && isFunction(_this.props.onChange)) {\n          _this.props.onChange(event);\n        }\n      }\n\n      if (isFunction(_this.props.onBlur)) {\n        _this.props.onBlur(event);\n      }\n    };\n\n    _this.onMouseDown = function (event) {\n      // tiny unintentional mouse movements can break cursor\n      // position on focus, so we have to restore it in that case\n      //\n      // https://github.com/sanniassin/react-input-mask/issues/108\n      if (!_this.focused && document.addEventListener) {\n        _this.mouseDownX = event.clientX;\n        _this.mouseDownY = event.clientY;\n        _this.mouseDownTime = new Date().getTime();\n\n        var mouseUpHandler = function mouseUpHandler(mouseUpEvent) {\n          document.removeEventListener('mouseup', mouseUpHandler);\n\n          if (!_this.focused) {\n            return;\n          }\n\n          var deltaX = Math.abs(mouseUpEvent.clientX - _this.mouseDownX);\n          var deltaY = Math.abs(mouseUpEvent.clientY - _this.mouseDownY);\n          var axisDelta = Math.max(deltaX, deltaY);\n\n          var timeDelta = new Date().getTime() - _this.mouseDownTime;\n\n          if (axisDelta <= 10 && timeDelta <= 200 || axisDelta <= 5 && timeDelta <= 300) {\n            _this.setCursorToEnd();\n          }\n        };\n\n        document.addEventListener('mouseup', mouseUpHandler);\n      }\n\n      if (isFunction(_this.props.onMouseDown)) {\n        _this.props.onMouseDown(event);\n      }\n    };\n\n    _this.onPaste = function (event) {\n      if (isFunction(_this.props.onPaste)) {\n        _this.props.onPaste(event);\n      } // event.clipboardData might not work in Android browser\n      // cleaning input to get raw text inside onChange handler\n\n\n      if (!event.defaultPrevented) {\n        _this.beforePasteState = {\n          value: _this.getInputValue(),\n          selection: _this.getSelection()\n        };\n\n        _this.setInputValue('');\n      }\n    };\n\n    _this.handleRef = function (ref) {\n      if (_this.props.children == null && isFunction(_this.props.inputRef)) {\n        _this.props.inputRef(ref);\n      }\n    };\n\n    var _mask = props.mask,\n        _maskChar = props.maskChar,\n        _formatChars = props.formatChars,\n        _alwaysShowMask = props.alwaysShowMask,\n        _beforeMaskedValueChange = props.beforeMaskedValueChange;\n    var defaultValue = props.defaultValue,\n        _value = props.value;\n    _this.maskOptions = parseMask(_mask, _maskChar, _formatChars);\n\n    if (defaultValue == null) {\n      defaultValue = '';\n    }\n\n    if (_value == null) {\n      _value = defaultValue;\n    }\n\n    var _newValue = getStringValue(_value);\n\n    if (_this.maskOptions.mask && (_alwaysShowMask || _newValue)) {\n      _newValue = formatValue(_this.maskOptions, _newValue);\n\n      if (isFunction(_beforeMaskedValueChange)) {\n        var oldValue = props.value;\n\n        if (props.value == null) {\n          oldValue = defaultValue;\n        }\n\n        oldValue = getStringValue(oldValue);\n\n        var modifiedValue = _beforeMaskedValueChange({\n          value: _newValue,\n          selection: null\n        }, {\n          value: oldValue,\n          selection: null\n        }, null, _this.getBeforeMaskedValueChangeConfig());\n\n        _newValue = modifiedValue.value;\n      }\n    }\n\n    _this.value = _newValue;\n    return _this;\n  }\n\n  var _proto = InputElement.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true; // workaround for react-test-renderer\n    // https://github.com/sanniassin/react-input-mask/issues/147\n\n    if (!this.getInputDOMNode()) {\n      return;\n    }\n\n    this.isWindowsPhoneBrowser = isWindowsPhoneBrowser();\n\n    if (this.maskOptions.mask && this.getInputValue() !== this.value) {\n      this.setInputValue(this.value);\n    }\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    var previousSelection = this.previousSelection;\n    var _this$props = this.props,\n        beforeMaskedValueChange = _this$props.beforeMaskedValueChange,\n        alwaysShowMask = _this$props.alwaysShowMask,\n        mask = _this$props.mask,\n        maskChar = _this$props.maskChar,\n        formatChars = _this$props.formatChars;\n    var previousMaskOptions = this.maskOptions;\n    var showEmpty = alwaysShowMask || this.isFocused();\n    var hasValue = this.props.value != null;\n    var newValue = hasValue ? getStringValue(this.props.value) : this.value;\n    var cursorPosition = previousSelection ? previousSelection.start : null;\n    this.maskOptions = parseMask(mask, maskChar, formatChars);\n\n    if (!this.maskOptions.mask) {\n      if (previousMaskOptions.mask) {\n        this.stopSaveSelectionLoop(); // render depends on this.maskOptions and this.value,\n        // call forceUpdate to keep it in sync\n\n        this.forceUpdate();\n      }\n\n      return;\n    } else if (!previousMaskOptions.mask && this.isFocused()) {\n      this.runSaveSelectionLoop();\n    }\n\n    var isMaskChanged = this.maskOptions.mask && this.maskOptions.mask !== previousMaskOptions.mask;\n\n    if (!previousMaskOptions.mask && !hasValue) {\n      newValue = this.getInputValue();\n    }\n\n    if (isMaskChanged || this.maskOptions.mask && (newValue || showEmpty)) {\n      newValue = formatValue(this.maskOptions, newValue);\n    }\n\n    if (isMaskChanged) {\n      var filledLength = getFilledLength(this.maskOptions, newValue);\n\n      if (cursorPosition === null || filledLength < cursorPosition) {\n        if (isFilled(this.maskOptions, newValue)) {\n          cursorPosition = filledLength;\n        } else {\n          cursorPosition = getRightEditablePosition(this.maskOptions, filledLength);\n        }\n      }\n    }\n\n    if (this.maskOptions.mask && isEmpty(this.maskOptions, newValue) && !showEmpty && (!hasValue || !this.props.value)) {\n      newValue = '';\n    }\n\n    var newSelection = {\n      start: cursorPosition,\n      end: cursorPosition\n    };\n\n    if (isFunction(beforeMaskedValueChange)) {\n      var modifiedValue = beforeMaskedValueChange({\n        value: newValue,\n        selection: newSelection\n      }, {\n        value: this.value,\n        selection: this.previousSelection\n      }, null, this.getBeforeMaskedValueChangeConfig());\n      newValue = modifiedValue.value;\n      newSelection = modifiedValue.selection;\n    }\n\n    this.value = newValue;\n    var isValueChanged = this.getInputValue() !== this.value; // render depends on this.maskOptions and this.value,\n    // call forceUpdate to keep it in sync\n\n    if (isValueChanged) {\n      this.setInputValue(this.value);\n      this.forceUpdate();\n    } else if (isMaskChanged) {\n      this.forceUpdate();\n    }\n\n    var isSelectionChanged = false;\n\n    if (newSelection.start != null && newSelection.end != null) {\n      isSelectionChanged = !previousSelection || previousSelection.start !== newSelection.start || previousSelection.end !== newSelection.end;\n    }\n\n    if (isSelectionChanged || isValueChanged) {\n      this.setSelection(newSelection.start, newSelection.end);\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n\n    if (this.selectionDeferId !== null) {\n      cancelDefer(this.selectionDeferId);\n    }\n\n    this.stopSaveSelectionLoop();\n  };\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        mask = _this$props2.mask,\n        alwaysShowMask = _this$props2.alwaysShowMask,\n        maskChar = _this$props2.maskChar,\n        formatChars = _this$props2.formatChars,\n        inputRef = _this$props2.inputRef,\n        beforeMaskedValueChange = _this$props2.beforeMaskedValueChange,\n        children = _this$props2.children,\n        restProps = _objectWithoutPropertiesLoose(_this$props2, [\"mask\", \"alwaysShowMask\", \"maskChar\", \"formatChars\", \"inputRef\", \"beforeMaskedValueChange\", \"children\"]);\n\n    var inputElement;\n    process.env.NODE_ENV !== \"production\" ? warning( // parse mask to test against actual mask prop as this.maskOptions\n    // will be updated later in componentDidUpdate\n    !restProps.maxLength || !parseMask(mask, maskChar, formatChars).mask, 'react-input-mask: maxLength property shouldn\\'t be passed to the masked input. It breaks masking and unnecessary because length is limited by the mask length.') : void 0;\n\n    if (children) {\n      !isFunction(children) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'react-input-mask: children must be a function') : invariant(false) : void 0;\n      var controlledProps = ['onChange', 'onPaste', 'onMouseDown', 'onFocus', 'onBlur', 'value', 'disabled', 'readOnly'];\n\n      var childrenProps = _extends({}, restProps);\n\n      controlledProps.forEach(function (propId) {\n        return delete childrenProps[propId];\n      });\n      inputElement = children(childrenProps);\n      var conflictProps = controlledProps.filter(function (propId) {\n        return inputElement.props[propId] != null && inputElement.props[propId] !== restProps[propId];\n      });\n      !!conflictProps.length ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"react-input-mask: the following props should be passed to the react-input-mask's component and should not be altered in children's function: \" + conflictProps.join(', ')) : invariant(false) : void 0;\n      process.env.NODE_ENV !== \"production\" ? warning(!inputRef, 'react-input-mask: inputRef is ignored when children is passed, attach ref to the children instead') : void 0;\n    } else {\n      inputElement = React.createElement(\"input\", _extends({\n        ref: this.handleRef\n      }, restProps));\n    }\n\n    var changedProps = {\n      onFocus: this.onFocus,\n      onBlur: this.onBlur\n    };\n\n    if (this.maskOptions.mask) {\n      if (!restProps.disabled && !restProps.readOnly) {\n        changedProps.onChange = this.onChange;\n        changedProps.onPaste = this.onPaste;\n        changedProps.onMouseDown = this.onMouseDown;\n      }\n\n      if (restProps.value != null) {\n        changedProps.value = this.value;\n      }\n    }\n\n    inputElement = React.cloneElement(inputElement, changedProps);\n    return inputElement;\n  };\n\n  return InputElement;\n}(React.Component);\n\nmodule.exports = InputElement;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}